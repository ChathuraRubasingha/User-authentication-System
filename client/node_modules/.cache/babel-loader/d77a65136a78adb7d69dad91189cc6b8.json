{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chathura rubasingha\\\\OneDrive\\\\Desktop\\\\New folder\\\\Login System\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport Layout from './Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          textAlign: \"center\",\n          width: \"40%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m-5\",\n          children: \"Update your quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateQuote,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control m-2\",\n            type: \"text\",\n            placeholder: \"Quote\",\n            value: tempQuote,\n            onChange: e => setTempQuote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-primary m-2\",\n            type: \"submit\",\n            value: \"Update quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m-2\",\n          children: [\"Your quote: \", quote || 'No quote found']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/chathura rubasingha/OneDrive/Desktop/New folder/Login System/client/src/pages/Dashboard.js"],"names":["React","useEffect","useState","jwt","useHistory","Layout","Dashboard","history","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","updateQuote","event","preventDefault","method","body","JSON","stringify","textAlign","width","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport Layout from './Layout'\n\nconst Dashboard = () => {\n\tconst history = useHistory()\n\tconst [quote, setQuote] = useState('')\n\tconst [tempQuote, setTempQuote] = useState('')\n\n\tasync function populateQuote() {\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\n\t\t\theaders: {\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(data.quote)\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/login')\n\t\t\t} else {\n\t\t\t\tpopulateQuote()\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tasync function updateQuote(event) {\n\t\tevent.preventDefault()\n\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquote: tempQuote,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(tempQuote)\n\t\t\tsetTempQuote('')\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Layout>\n\t\t<div className='container' style={{ textAlign: \"center\", width: \"40%\" }}>\n\t\t\t<h1 className='m-5'>Update your quote</h1>\n\t\t\t<form onSubmit={updateQuote}>\n\t\t\t\t<input\n\t\t\t\tclassName='form-control m-2'\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Quote\"\n\t\t\t\t\tvalue={tempQuote}\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<br/>\n\t\t\t\t<input className='btn btn-primary m-2' type=\"submit\" value=\"Update quote\" />\n\t\t\t</form>\n\n\t\t\t<h1 className='m-2'>Your quote: {quote || 'No quote found'}</h1>\n\t\t</div>\n\t\t</Layout>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}